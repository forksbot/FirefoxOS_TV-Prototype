{"version":3,"sources":["../../app/scripts/key_navigation_adapter.js"],"names":[],"mappings":"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","file":"key_navigation_adapter.js","sourcesContent":["/* global KeyEvent, evt */\n(function(exports) {\n  'use strict';\n  // KeyNavigationAdapter files event with '-keyup' as postfix. All behaviors\n  // which no need to have multple events while holding the key should use\n  // keyup.\n  // If we choose to listen to mozbrowser key events, before- and after- prefix\n  // will be attached on filed events.\n  function KeyNavigationAdapter() {\n  }\n\n  KeyNavigationAdapter.prototype = evt({\n    KEY_EVENTS: Object.freeze([\n      'keydown',\n      'keyup'\n    ]),\n\n    MOZ_BROWSER_KEY_EVENTS: [\n      'mozbrowserbeforekeydown',\n      'mozbrowserbeforekeyup',\n      'mozbrowserafterkeydown',\n      'mozbrowserafterkeyup'\n    ],\n\n    init: function kna_init(targetElement, options) {\n      this._targetElement = targetElement || window;\n      options = options || {};\n\n      // Pick required event listeners and add them\n      this._evtNames = [].concat(this.KEY_EVENTS);\n      if (options.useMozBrowserKeyEvents) {\n        this._evtNames = this._evtNames.concat(this.MOZ_BROWSER_KEY_EVENTS);\n      }\n      this._evtNames.forEach(\n                      name => this._targetElement.addEventListener(name, this));\n\n    },\n    uninit: function kna_uninit() {\n      this._evtNames.foreach(\n                   name => this._targetElement.removeEventListener(name, this));\n    },\n\n    handleEvent: function kna_handleEvent(evt) {\n      if(this._evtNames.indexOf(evt.type) !== -1) {\n        this.handleKeyEvent(this.convertKeyToString(evt.keyCode), evt.type);\n      }\n    },\n\n    handleKeyEvent: function kna_handleKeyEvent(key, eventType) {\n      // XXX : It's better to use KeyEvent.Key and use \"ArrowUp\", \"ArrowDown\",\n      // \"ArrowLeft\", \"ArrowRight\" for switching after Gecko synced with W3C\n      // KeyboardEvent.Key standard. Here we still use KeyCode and customized\n      // string of \"up\", \"down\", \"left\", \"right\" for the moment.\n      var evtPostfix = 'keyup' === eventType ? '-keyup' : '';\n\n      var prefixMatch = /mozbrowser(before|after)/.exec(eventType);\n      var evtPrefix = prefixMatch ? prefixMatch[1] + '-' : '';\n\n      switch (key) {\n        case 'up':\n        case 'down':\n        case 'left':\n        case 'right':\n          this.fire(evtPrefix + 'move' + evtPostfix, key);\n          break;\n        case 'enter':\n          this.fire(evtPrefix + 'enter' + evtPostfix);\n          break;\n        case 'esc':\n          this.fire(evtPrefix + 'esc' + evtPostfix);\n          break;\n      }\n    },\n\n    convertKeyToString: function kna_convertKeyToString(keyCode) {\n      switch (keyCode) {\n        case KeyEvent.DOM_VK_UP:\n          return 'up';\n        case KeyEvent.DOM_VK_RIGHT:\n          return 'right';\n        case KeyEvent.DOM_VK_DOWN:\n          return 'down';\n        case KeyEvent.DOM_VK_LEFT:\n          return 'left';\n        case KeyEvent.DOM_VK_RETURN:\n          return 'enter';\n        case KeyEvent.DOM_VK_ESCAPE:\n          return 'esc';\n        case KeyEvent.DOM_VK_BACK_SPACE:\n          return 'esc';\n        default:// we don't consume other keys.\n          return null;\n      }\n    }\n  });\n  exports.KeyNavigationAdapter = KeyNavigationAdapter;\n\n}(window));\n"]}