/* Generated by grunt-webfont */
/* Based on https://github.com/endtwist/fontcustom/blob/master/lib/fontcustom/templates/fontcustom.css */


@font-face {
  font-family: "smart-icons";
  src: url("fonts/smart-icons.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
}


[data-icon]:before,
.ligature-icons {
  font-family: "smart-icons";
  content: attr(data-icon);
  display: inline-block;
  font-weight: 500;
  font-style: normal;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  font-size: 30px;
  -webkit-font-smoothing: antialiased;
}

/**
 * Button state:
 *    1. normal
 *        In this state, we don't add any class.
 *    2. focused (class name: focused)
 *        The focused state may be triggered by keyboard or touch/mouse.
 *    3. pressed (class name: pressed)
 *        This state is triggered by user pressed confirm button, mousedown,
 *        and touchdown.
 *    4. released (class name: released)
 *        This state is only for changing duration of transition. We enter this
 *        state when user release the button. After transitionend, we goes back
 *        to focused state.
**/
smart-button {
  font-family: "Fira Sans";
  display: inline-block;
  width: 8rem;
  height: 8rem;
  /* we need to set border to none to remove the button border */
  border: none;
  /* the radius is still make button as round even if we don't have border */
  border-radius: 50%;
  /* 50% is not a real circle because of rounding, we have to use a value larger
     than 50% */
  -moz-outline-radius: 60%;
  outline: transparent 0 solid;
  background-color: rgba(0, 0, 0, 0.5);
  background-repeat: no-repeat;
  background-size: 5.4rem auto;
  background-position: center center;
  font-style: italic;

  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.42s;
}

smart-button.focused {
  outline: 0;
  background-color: #ffffff;
  transform: scale(1.2);
  transition-duration: 0.42s;
}

smart-button.released {
  transition-duration: 0.16s;
}

smart-button.toggled {
  background-color: #00caf2;
}

smart-button.pressed {
  background-color: #00caf2;
  transform: scale(0.8);
  transition-duration: 0.06s;
}

smart-button.disabled {
  background-color: rgba(0, 0, 0, 0.5);
}

smart-button[data-icon]:before {
  width: 5.4rem;
  left: 1.3rem;
  font-size: 5.4rem;
  line-height: 8rem;
  text-align: center;
  color: #ffffff;
  white-space: normal;
  top: 0;
  position: absolute;
}

smart-button[data-icon].focused:before {
  color: #2d2d2d;
}

smart-button[data-icon].toggled:before {
  color: #00caf2;
}

smart-button[data-icon].pressed:before {
  color: #ffffff;
}

smart-button[data-icon].disabled:before {
  color: #ffffff;
  opacity: 0.3;
}

/**
 * Simple Text Button
**/
smart-button[type="simple-text"] {
  color: #dddddd;
  background: none;
  border: none;
  border-radius: 0;

  width: auto;
  height: 8rem;

  line-height: 8rem;
  font-size: 2.4rem;
  -moz-user-select: none;
  padding-left: 2.6rem;
  padding-right: 2.6rem;
}

smart-button[type="simple-text"].focused {
  color: #ffffff;
  background: none;
}

smart-button[type="simple-text"].toggled {
  color: #00caf2;
}

smart-button[type="simple-text"].pressed {
  color: #00caf2;
  background: none;
}

/**
 * End of Simple Text Button
**/



/**
 * underlined text button
 */
smart-button[type="underlined-text"] {
  position: relative;
  color: white;
  font-size: 2.4rem;
  padding-left: 3.8rem;
  padding-right: 3.8rem;
  border-radius: 4rem;
  width: auto;
  line-height: 8rem;
  margin-right: 1.4rem;
  overflow: hidden;
}

smart-button[type="underlined-text"]:after {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  content: ' ';
  border-bottom: 0.6rem #61acd7 solid;
  box-sizing: border-box;
}

smart-button[type="underlined-text"].focused {
  transform: scale(1.2);
  color: #2d2d2d;
}

smart-button[type="underlined-text"].pressed {
  transform: scale(1);
  color: white;
  background-color: #00caf2;
}

/**
 * End of underlined text button
 */

/**
 * App Icons
**/
smart-button[type="app-button"] {
  /* To use 33.4rem instead of to use 33.6rem is to work around the anti-alias
     pixel. So, the circle is filled by the background almost totally. */
  width: 33.4rem;
  height: 33.4rem;
  position: relative;
  overflow: hidden;
  background-color: transparent;
}

smart-button[type="app-button"].focused {
  transform: scale(1.4);
  /* To use outline will not change the size of button and make the whole button
     thrilling. */
  outline: 0.8rem solid #ffffff;
}

smart-button[type="app-button"].pressed {
  /* While scaling, we may have a gap between outline and icon which may be
     anti-alias pixel. So, we use scale(1.22) to prevent such kind of case */
  transform: scale(1.22);
  /* To use outline will not change the size of button and make the whole button
     thrilling. */
  outline: 1.0rem solid #ffffff;
}

smart-button[type="app-button"].fullsized {
  background-size: 33.6rem auto;
}

smart-button[type="app-button"].fitted {
  background-size: 22rem auto;
}

/** we use :after as label */
smart-button[type="app-button"]:after {
  content: attr(label);

  position: absolute;
  bottom: 0;
  left: auto;
  right: auto;

  width: 33.6rem;
  height: 8rem;

  padding-top: 1rem;

  line-height: 3rem;
  text-align: center;

  font-size: 2.8rem;
  font-style: italic;
  color: #ffffff;
}

/**
 * text backgorund color
**/
smart-button[type="app-button"][app-type="deck"]:after {
  background-color: transparent;
}

smart-button[type="app-button"][app-type="tv"]:after {
  background-color: #d90c83;
}

smart-button[type="app-button"][app-type="app"]:after {
  background-color: rgba(0, 0, 0, 0.4);
}

smart-button[type="app-button"][app-type="device"]:after {
  background-color: #4a82ea;
}

smart-button[type="app-button"][app-type="folder"] {
  background-color: #595959;
}

smart-button[type="app-button"]:before {
  left: 0;
  line-height: 30rem;
  font-size: 16rem;
  width: 100%;
}

smart-button[type="app-button"][app-type="folder"]:before {
  color: #CCCCCC;
}

/**
 * End of App Icons
**/

/**
 * text and icon button
 */
smart-button[type="text-and-icon"] {
  position: relative;
  color: white;
  font-size: 2.4rem;
  padding-left: 4.6rem;
  padding-right: 4.6rem;
  border-radius: 4rem;
  width: auto;
  line-height: 8rem;
  margin-right: 1.4rem;
  overflow: hidden;
}

smart-button[type="text-and-icon"][data-icon] {
  padding-left: 9.6rem;
}

smart-button[type="text-and-icon"][data-icon]:before {
  left: 3.8rem;
}

smart-button[type="text-and-icon"].focused {
  transform: scale(1.2);
  color: #2d2d2d;
}

smart-button[type="text-and-icon"].pressed {
  transform: scale(1);
  color: white;
  background-color: #00caf2;
}

/**
 * End of text and icon button
 */

/**
 * banner button
**/
smart-button[type="banner-button"] {
  position: relative;

  color: #ffffff;
  font-size: 2rem;

  width: 36rem;
  height: 20rem;
  overflow: hidden;

  border-radius: 0;
  border: 0 solid #ffffff;

  background-color: #5f5f5f;
  background-repeat: no-repeat;
  background-size: 120%;

  box-sizing: border-box;

  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0.5, 1.0);
  transition-duration: 0.1s;
}

smart-button[type="banner-button"][label]:before {
  content: attr(label);

  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;

  height: 5rem;

  line-height: 5rem;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.4);
}

smart-button[type="banner-button"]:after {
  content: " ";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.06s;
  background-color: rgba(255, 255, 255, 0);
}

smart-button[type="banner-button"].focused {
  transform: none;
  border-width: 1.2rem;
  background-size: 100%;
  transition-duration: 0.24s;
}

smart-button[type="banner-button"].pressed {
  transform: scale(0.945, 0.9);
}

smart-button[type="banner-button"].pressed:after {
  background-color: rgba(255, 255, 255, 0.5);
}

/**
 * banner button
**/

/**
 * circle text button
 */
smart-button[type="circle-text"] {
  width: 21rem;
  height: 21rem;
  color: white;
  background-color: #5f6368;
  line-height: 21rem;
  padding: 2.5rem 2rem 1.5rem 2rem;
  text-align: center;
  font-size: 3.2rem;
  font-weight: bolder;
  overflow: hidden;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].focused {
  transform: scale(1.2);
  color: #2d2d2d;
  background-color: white;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].pressed {
  transform: scale(1);
  color: white;
  background-color: #00caf2;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].primary {
  background-color: #00caf2;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].primary.focused {
  color: #ffffff;
  background-color: #00caf2;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].primary.pressed {
  background-color: #0097b5;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].danger {
  background-color: #e63d2f;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].danger.focused {
  color: #ffffff;
  background-color: #e63d2f;
  transition-property: transform, color, background-color;
}

smart-button[type="circle-text"].danger.pressed {
  background-color: #ac2e23;
  transition-property: transform, color, background-color;
}

/**
 * End of circle text button
 */

/**
 * Smart-Dialog
 *   - State:
 *       1. closed
 *       2. opening
 *       3. opened - content visible
 *       4. closing
 * Default scale: 1920x1080 (2*sqrt(960*960 + 1080*1080) / 20 = 144.5)
 */

smart-dialog {
  position: fixed;
  z-index: 2147483647;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

smart-dialog:before {
  content: attr(title);
  display: block;
  margin-top: 5rem;
  margin-left: 7.6rem;
  font-family: "Fira Sans";
  font-size: 5.4rem;
  font-style: italic;
  color: #ffffff;
}

smart-dialog:after {
  content: "";
  display: block;
  position: fixed;
  height: 2rem;
  width: 2rem;
  top: calc(100% - 1rem);
  left: calc(50% - 1rem);
  background-color: rgba(0, 0, 0, 0.9);
  transition: none;
  transform: scale(20);
}

smart-dialog.closed > *,
smart-dialog.closing > *,
smart-dialog.opening > *,
smart-dialog.closed:before,
smart-dialog.closing:before,
smart-dialog.opening:before {
  display: none;
}

smart-dialog.closed {
  visibility: hidden;
}

smart-dialog.opened {
  background-color: rgba(0, 0, 0, 0.9);
}

smart-dialog.opened:after {
  visibility: hidden;
  border-radius: 50%;
  transform: scale(144.5);
}

smart-dialog.opening:after {
  border-radius: 50%;
  transform: scale(144.5);
  /* transitionDuration should be the same as openDuration variable in script */
  transition: transform 1s cubic-bezier(0, 0, 0 ,1);
}

smart-dialog.closing:after {
  border-radius: 50%;
  transform: scale(20);
  /* transitionDuration should be the same as closeDuration variable in script */
  transition: transform 0.65s cubic-bezier(0.6, 0, 1 ,1);
}

/* 1280x800 for flatfish */
@media (width: 1280px) and (height: 800px) {
  smart-dialog:after,
  smart-dialog.closing:after {
    transform: scale(7.5);
  }

  smart-dialog.opening:after {
    transform: scale(102.5);
  }
}

/* 800x1280 for flatfish vertical */
@media (width: 800px) and (height: 1280px) {
  smart-dialog:after,
  smart-dialog.closing:after {
    transform: scale(8.3);
  }

  smart-dialog.opening:after {
    transform: scale(134);
  }
}

*[smart-bubbles="true"] .smart-bubble-playing {
  transition-property: none;
  transform: none;
  animation: bubble-animation 0.5s cubic-bezier(0.25, 0, 0, 1) both;
}

*[smart-bubbles="true"][smart-bubbles-direction="down"] .smart-bubble-playing {
  animation: sinking-animation 0.5s cubic-bezier(0.25, 0, 0, 1) both;
}

*[smart-bubbles="true"] .smart-bubble-stopped {
  transition-property: none;
  transform: none;
  animation: none;
}

@keyframes bubble-animation {
  0%   {opacity: 0; transform: translateY(8rem);}
  50%  {opacity: 1;}
  100% {transform: translateY(0);}
}

@keyframes sinking-animation {
  0%   {opacity: 1; transform: translateY(0);}
  100% {opacity: 0; transform: translateY(8rem);}
}

.modal-dialog > .outer-container {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
}

.modal-dialog > .outer-container:before {
  content: "";
  display: inline-block;
  height: 100%;
  width: 0.1rem;
  margin-left: -0.1rem;
  vertical-align: middle;
}

.modal-dialog .container {
  width: 100%;
  vertical-align: middle;
  display: inline-block;
}

.modal-dialog .modal-dialog-message-container {
  width: 96rem;
  position: relative;
  margin: 0 auto 13rem auto;
  word-wrap: break-word;
}

.modal-dialog .modal-dialog-custom-group {
  color: #ffffff;
  text-align: center;
  font-family: Fira Sans;
}

.modal-dialog .modal-dialog-custom-group.hidden {
  display: none;
}

.modal-dialog-input-group {
  text-align: center;
  position: relative;
  margin: 0 auto;
  width: 70rem;
}

.modal-dialog-input-group input {
  font-size: 3.8rem;
  font-size: 3.8rem;
  color: #ffffff;
  text-align: center;
  background: none;
  border: none;
}

.modal-dialog-input-group .focus {
  bottom: 0px;
  width: 100%;
  height: 0.4rem;
  margin: 0.4rem auto 0 auto;
  visibility: hidden;
  background: #00caf2;
}

.modal-dialog-input-group .clear:before {
  vertical-align: top;
  line-height: 3rem;
}

.modal-dialog-input-group .clear {
  position: absolute;
  left: calc(100% - 4rem);
  border: 0;
  margin: 0;
  padding: 0;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  opacity: 0;
  color: #ffffff;
  cursor: pointer;
  background: #999999;
}

.modal-dialog-input-group :focus ~ .focus {
  visibility: visible;
}

.modal-dialog-input-group :focus ~ .clear,
.modal-dialog-input-group :focus.clear {
  opacity: 1;
}

.modal-dialog .modal-dialog-message {
  font-size: 3.8rem;
  font-style: italic;
  color: #ffffff;
  text-align: center;
  font-family: Fira Sans;
  font-weight: 100;
  margin-bottom: 3.4rem;
}

.modal-dialog .modal-dialog-message.hidden {
  display: none;
}

.modal-dialog .modal-dialog-button-group {
  white-space: nowrap;
  /* use inline-block to wrap content */
  display: inline-block;
}

.modal-dialog.modal-dialog-opened .modal-dialog-button-group {
  transition: transform 0.2s ease;
}

.modal-dialog .modal-dialog-button-group > * {
  margin-right: 4.4rem;
}

.modal-dialog .modal-dialog-button-group > *:last-child {
  margin-right: 0;
}

/**
 * Button state:
 *    1. normal (class name: [none])
 *    2. enlarging (class name: enlarging)
 *    3. shrinking (class name: shrinking)
 *    4. opening (class name: opening)
 *    5. closing (class name: closing)
 *    6. closed (class name: closed)
**/

/**
 * focus: closed -> closed + enlarging -> closed + shrinking -> opening -> ''
 * close: '' -> closing -> closed;
**/

menu-group {
  outline: 0;
  display: inline-block;
  height: 8rem;
  padding-left: 8rem;
  padding-right: 4rem;
  opacity: 1;
  /* we need to set border to none to remove the button border */
  border: none;
  /* the radius is still make button as round even if we don't have border */
  border-radius: 4rem;
  background-color: rgba(0, 0, 0, 0.5);

  word-break: keep-all;
  white-space: nowrap;
  overflow: hidden;
  position: relative;

  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.42s;
}

menu-group:before {
  content: " ";
  background-repeat: no-repeat;
  background-size: 5.4rem auto;
  background-position: 1.3rem center;
  width: 8rem;
  height: 8rem;
  display: inline-block;
  position: absolute;
  left: 0;

  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.42s;
}

menu-group[rotate]:before {
  transform: rotate(360deg);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.42s;
}

menu-group[data-icon]:before {
  width: 5.4rem;
  left: 1.3rem;
  font-size: 5.4rem;
  line-height: 8rem;
  text-align: center;
  color: #ffffff;
  white-space: normal;
  top: 0;
}

menu-group[data-icon].switching-icon:before {
  font-size: 5.4rem;
  line-height: 8rem;
  text-align: center;
  color: #ffffff;
  /**
   * According to visual spec, we have falling down transition while icon
   * change.
   *
   * The trick is:
   *   1. to put the next icon at the top of current and slide icons down.
   *   2. to set transition duration to 0 here to elimiate the slide up
   *      transition.
  **/
  top: -8rem;
  transition: none;
}

menu-group.closed {
  padding-right: 0;

  transition-duration: 0.5s;
  background-color: rgba(0, 0, 0, 0.5);
}

menu-group.closed > * {
  display: none;
}

menu-group[rotate].closed:before {
  transform: rotate(0deg);
}

menu-group.opening {
  transition-duration: 0.72s;
  /* add the same padding-right of normal to make it run transition */
  padding-right: 4rem;
}

menu-group.opening:before {
  transition-duration: 0.72s;
}

menu-group.closing {
  transition-duration: 0.5s;
  padding-right: 0;
  background-color: rgba(0, 0, 0, 0.5);
}

menu-group[rotate].closing:before {
  transform: rotate(0deg);
  transition-duration: 0.5s;
}

menu-group.enlarging {
  opacity: 1;
  background-color: #ffffff;
  transform: scale(1.2);
  transition-duration: 0.2s;
}

menu-group.shrinking {
  transition-duration: 0.23s;
}

.animation-circle,
#screen:-moz-full-screen-ancestor .appWindow > div.animation-circle,
.appWindow.fullscreen-app > div:not(.titlebar):not(.maximized).animation-circle {
  position: fixed;
  z-index: 9999;
  border-radius: 50%;
  height: 50rem;
  width: 50rem;
  top: calc(100% - 25rem);
  left: calc(50% - 25rem);
  background-color: rgba(0, 0, 0, 0.9);
}

.animation-circle.grow {
  animation: circleGrow 1s cubic-bezier(0, 0, 0 ,1);
}

.animation-circle.shrink {
  animation: circleShrink 0.65s cubic-bezier(0.6, 0, 1 ,1);
}

@keyframes circleGrow {
    0%   {transform: scale(0.8);}
    100% {transform: scale(6);} /* for 1920x1080 screen only */
}

@keyframes circleShrink {
    0%   {transform: scale(6);}
    100% {transform: scale(0.8);} /* for 1920x1080 screen only */
}

.animation-bubble-start,
#card-list smart-button[type="app-button"].animation-bubble-start {
  transition-property: none;
  transform: none;
  animation: bubble-animation 0.5s cubic-bezier(0.25, 0, 0, 1);
  animation-fill-mode: both;
  outline: 0;
  box-shadow: none;
}

@keyframes bubble-animation {
  0%   {opacity: 0; transform: translateY(8rem);}
  50%  {opacity: 1;}
  100% {transform: translateY(0);}
}
